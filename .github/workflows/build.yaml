name: Build

on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
        default: snapshot
        description: |
          the mode to use. either `snapshot` or `release`. Will affect effective version, as well
          as target-oci-registry.
    outputs:
      version:
        value: ${{ jobs.prepare.outputs.version }}

jobs:
  prepare:
    uses: gardener/cc-utils/.github/workflows/prepare.yaml@master
    with:
      mode: ${{ inputs.mode }}
      version-commit-callback-action-path:
    permissions:
      contents: read

  oci-images:
    name: Build OCI-Images
    needs:
      - prepare
    permissions:
      contents: read
      packages: write
      id-token: write
    secrets: inherit
    uses: gardener/cc-utils/.github/workflows/oci-ocm.yaml@master
    strategy:
      matrix:
        args:
          - name: terraformer
            target: terraformer
            oci-repository: gardener/terraformer
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-alicloud
            target: terraformer
            oci-repository: gardener/terraformer-alicloud
            build-args: |
              PROVIDER=alicloud
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-aws
            target: terraformer
            oci-repository: gardener/terraformer-aws
            build-args: |
              PROVIDER=aws
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-azure
            target: terraformer
            oci-repository: gardener/terraformer-azure
            build-args: |
              PROVIDER=azure
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-gcp
            target: terraformer
            oci-repository: gardener/terraformer-gcp
            build-args: |
              PROVIDER=gcp
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-openstack
            target: terraformer
            oci-repository: gardener/terraformer-openstack
            build-args: |
              PROVIDER=openstack
            ocm-labels:
              name: gardener.cloud/cve-categorisation
              value:
                network_exposure: protected
                authentication_enforced: false
                user_interaction: gardener-operator
                confidentiality_requirement: high
                integrity_requirement: high
                availability_requirement: low
          - name: terraformer-equinixmetal
            target: terraformer
            oci-repository: gardener/terraformer-equinixmetal
            build-args: |
              PROVIDER=equinixmetal
            ocm-labels:
              name: cloud.gardener.cnudie/dso/scanning-hints/binary_id/v1
              value:
                policy: skip
                comment: only open source related component
          - name: terraformer-slim
            target: terraformer
            oci-repository: gardener/terraformer-slim
            build-args: |
              PROVIDER=slim
            ocm-labels:
              name: cloud.gardener.cnudie/dso/scanning-hints/binary_id/v1
              value:
                policy: skip
                comment: only open source related component
    with:
      name: ${{ matrix.args.name }}
      version: ${{ needs.prepare.outputs.version }}
      target: ${{ matrix.args.target }}
      build-args: ${{ matrix.args.build-args }}
      oci-registry: ${{ needs.prepare.outputs.oci-registry }}
      oci-repository: ${{ matrix.args.oci-repository }}
      oci-platforms: linux/amd64
      ocm-labels: ${{ toJSON(matrix.args.ocm-labels) }}
      extra-tags: latest

  verify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: gardener/cc-utils/.github/actions/trusted-checkout@master
      - uses: actions/setup-go@v5
        with:
          go-version: ''
          go-version-file: ''
      - name: run-linter
        shell: bash
        run: |
          set -eu

          mkdir -p /tmp/blobs.d
          TEST_COV=yes \
            .ci/verify |& tee /tmp/blobs.d/verify-log.txt

          # linter-script is expected to output `gosec-report.sarif` (hardcoded contract)

          tar czf /tmp/blobs.d/gosec-report.tar.gz gosec-report.sarif
          tar czf /tmp/blobs.d/verify-log.tar.gz -C/tmp/blobs.d verify-log.txt
      - name: add-reports-to-component-descriptor
        uses: gardener/cc-utils/.github/actions/export-ocm-fragments@master
        with:
          blobs-directory: /tmp/blobs.d
          ocm-resources: |
            - name: gosec-report
              relation: local
              access:
                type: localBlob
                localReference: gosec-report.tar.gz
              labels:
                - name: gardener.cloud/purposes
                  value:
                    - lint
                    - sast
                    - gosec
                - name: gardener.cloud/comment
                  value: |
                    we use gosec (linter) for SAST scans
                    see: https://github.com/securego/gosec
            - name: test-results
              relation: local
              access:
                type: localBlob
                localReference: verify-log.tar.gz
              labels:
                - name: gardener.cloud/purposes
                  value:
                    - test
